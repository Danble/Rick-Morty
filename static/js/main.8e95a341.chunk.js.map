{"version":3,"sources":["actions/searchAction.js","pages/home.jsx","pages/characters.jsx","pages/characterInfo.jsx","App.jsx","reportWebVitals.js","reducers/charList.js","reducers/index.js","index.jsx"],"names":["CHARACTERS_REQUEST","CHARACTERS_DEFAULT","CHARACTERS_SUCCESS","CHARACTERS_ERROR","charactersError","error","type","payload","fetchCharacters","character","history","dispatch","axios","get","then","res","characters","data","results","push","catch","err","response","status","Home","useSelector","state","search","useHistory","useDispatch","useState","char","setChar","loading","className","onChange","e","target","value","placeholder","aria-label","onClick","dispatcher","chars","preventDefault","getChars","src","alt","Characters","map","style","maxWidth","image","name","species","gender","id","Character","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e95a341.chunk.js","sourcesContent":["import axios from 'axios';\r\n//import { push } from 'react-router-dom'\r\n\r\nexport const CHARACTERS_REQUEST = \"CHARACTERS_REQUEST\";\r\nexport const CHARACTERS_DEFAULT = \"CHARACTERS_DEFAULT\";\r\nexport const CHARACTERS_SUCCESS = \"CHARACTERS_SUCCESS\";\r\nexport const CHARACTERS_ERROR = \"CHARACTERS_ERROR\";\r\n\r\n// Actions\r\nexport const charactersRequest = () => {\r\n  return {\r\n    type: CHARACTERS_REQUEST\r\n  }\r\n}\r\nexport const charactersDefault = () => {\r\n  return {\r\n    type: CHARACTERS_DEFAULT\r\n  }\r\n}\r\nexport const charactersSuccess = characters => {\r\n  return {\r\n    type: CHARACTERS_SUCCESS,\r\n    payload: characters\r\n  }\r\n}\r\nexport const charactersError = error => {\r\n  return {\r\n    type: CHARACTERS_ERROR,\r\n    payload: error\r\n  }\r\n}\r\n\r\nconst fetchCharacters = (character, history) => {\r\n  return dispatch => {\r\n    if(!character) {\r\n      dispatch(charactersDefault());\r\n    } else {\r\n      dispatch(charactersRequest());\r\n      axios.get(`https://rickandmortyapi.com/api/character/?name=${character}`)\r\n      .then(res => {\r\n        dispatch(charactersSuccess(res.data.results));\r\n        //Redirecting to characters\r\n        history.push('/Rick-Morty/characters')\r\n      })\r\n      // Aquí podemos manejar más errores: falló de conexión p.e.\r\n      .catch(err => {\r\n        if(err.response) {\r\n          if(err.response.status === 404) {\r\n            dispatch(charactersError(\"No hay personajes con ese nombre\"))\r\n          }\r\n        } else {\r\n          dispatch(charactersError(\"Problema de conexión\"))\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchCharacters;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport '../assets/css/styles.css'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport fetchCharacters from '../actions/searchAction';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction getChars(e, dispatcher, chars, history){\r\n  e.preventDefault();\r\n  dispatcher(fetchCharacters(chars, history));\r\n}\r\n\r\nexport default function Home() {\r\n  const data = useSelector(state => state.search);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [char, setChar] = useState(null);\r\n\r\n  return (\r\n    <main>\r\n      { !data.error && !data.loading &&\r\n      <form className=\"d-flex search-bar\">\r\n        <input\r\n          className=\"form-control me-2 round\"\r\n          type=\"search\" onChange={e => setChar(e.target.value)}\r\n          placeholder=\"Rick Sanchez\"\r\n          aria-label=\"Search\" />\r\n        <button \r\n          onClick={e => getChars(e, dispatch, char, history)}\r\n          className=\"btn btn-outline-success search-btn\"\r\n          type=\"submit\">Buscar personajes\r\n        </button>\r\n      </form>}\r\n      {data.loading &&\r\n      <div className=\"sprite\">\r\n        {/* Posiblemente lo mejor sea poner un mensaje con animación ligera */}\r\n        <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/97424/sprite-spinner.png\" alt=\"loading\" />\r\n      </div>}\r\n      {!data.loading && data.error &&\r\n      <div className=\"error\">\r\n        <p><b>{data.error}</b></p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-info\"\r\n          onClick={() => {\r\n            dispatch(fetchCharacters(null, history))\r\n          }}>Regresar</button>\r\n      </div>}     \r\n    </main>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\"\r\n\r\nexport default function Characters() {\r\n  const data = useSelector(state => state.search);\r\n  const characters = data.characters.map(char => (\r\n    <div key={char.id} className=\"card char-card mb-3 col-sm-12 col-lg-6 col-xl-4\" style={{maxWidth: \"540px\"}}>\r\n      <div className=\"row g-0\">\r\n        <div className=\"col-md-4\">\r\n          <img src={char.image} className=\"img-fluid rounded-start\" alt={char.name} />\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{char.name}</h5>\r\n            <p className=\"card-text\">Species: <small className=\"text-muted\">{char.species}</small></p>\r\n            <p className=\"card-text\">Status: <small className=\"text-muted\">{char.status}</small></p>\r\n            <p className=\"card-text\">Gender: <small className=\"text-muted\">{char.gender}</small></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ))\r\n  return (\r\n    <div className=\"container characters row\">\r\n      {characters}\r\n    </div>\r\n  )\r\n}\r\n","\r\n\r\nexport default function Character() {\r\n  //const estado = useSelector(state => state.charList);\r\n  //const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <button>+</button>\r\n      <p>{/* estado ? estado.value : '' */}</p>\r\n    </div>\r\n  );\r\n}","import Home from './pages/home';\nimport Characters from './pages/characters';\nimport Character from './pages/characterInfo';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/Rick-Morty/\" component={Home} />\n        <Route exact path=\"/Rick-Morty/characters\" component={Characters} />\n        <Route exact path=\"/Rick-Morty/character\" component={Character} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHARACTERS_ERROR, CHARACTERS_DEFAULT, CHARACTERS_REQUEST, CHARACTERS_SUCCESS } from \"../actions/searchAction\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  characters: [],\r\n  error: null\r\n}\r\n\r\nconst search = (state=initialState, action) => {\r\n  switch(action.type){\r\n    case CHARACTERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case CHARACTERS_DEFAULT:\r\n      return  {\r\n        loading: false,\r\n        characters: [],\r\n        error: null\r\n      }\r\n    case CHARACTERS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        characters: action.payload,\r\n        error: null\r\n      }\r\n    case CHARACTERS_ERROR:\r\n      return {\r\n        loading: false,\r\n        characters: [],\r\n        error: action.payload\r\n      }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default search;","import { combineReducers } from 'redux';\r\nimport search from './charList';\r\n\r\nconst reducers = combineReducers({\r\n  search\r\n});\r\n\r\nexport default reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { applyMiddleware, createStore } from 'redux';\nimport reducers from './reducers';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}