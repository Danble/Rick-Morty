{"version":3,"sources":["store/actions/searchAction.js","pages/home.jsx","store/actions/getCharAction.js","pages/characters.jsx","pages/characterInfo.jsx","App.jsx","reportWebVitals.js","store/reducers/charList.js","store/reducers/charId.js","store/reducers/index.js","index.jsx"],"names":["CHARACTERS_REQUEST","CHARACTERS_DEFAULT","CHARACTERS_SUCCESS","CHARACTERS_ERROR","charactersError","error","type","payload","fetchCharacters","character","history","dispatch","axios","get","then","res","characters","data","results","push","catch","err","response","status","Home","useSelector","state","search","useHistory","useDispatch","useState","char","setChar","window","innerWidth","iWidth","setIWidth","useEffect","reportWindowSize","addEventListener","removeEventListener","loading","className","onChange","e","target","value","placeholder","aria-label","onClick","dispatcher","chars","preventDefault","getChars","src","alt","CHARACTER_REQUEST","CHARACTER_SUCCESS","CHARACTER_ERROR","fetchUniqueChar","id","console","log","withReactContent","Swal","fire","title","text","icon","confirmButtonText","confirmButtonColor","Characters","getChar","element","setElement","map","closest","style","maxWidth","image","name","document","getElementById","species","gender","Photo","MainData","Character","origin","location","episode","length","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cbb7b8df.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const CHARACTERS_REQUEST = \"CHARACTERS_REQUEST\";\r\nexport const CHARACTERS_DEFAULT = \"CHARACTERS_DEFAULT\";\r\nexport const CHARACTERS_SUCCESS = \"CHARACTERS_SUCCESS\";\r\nexport const CHARACTERS_ERROR = \"CHARACTERS_ERROR\";\r\n\r\n// Actions\r\nexport const charactersRequest = () => {\r\n  return {\r\n    type: CHARACTERS_REQUEST\r\n  }\r\n}\r\nexport const charactersDefault = () => {\r\n  return {\r\n    type: CHARACTERS_DEFAULT\r\n  }\r\n}\r\nexport const charactersSuccess = characters => {\r\n  return {\r\n    type: CHARACTERS_SUCCESS,\r\n    payload: characters\r\n  }\r\n}\r\nexport const charactersError = error => {\r\n  return {\r\n    type: CHARACTERS_ERROR,\r\n    payload: error\r\n  }\r\n}\r\n\r\nconst fetchCharacters = (character, history) => {\r\n  return dispatch => {\r\n    if(!character) {\r\n      dispatch(charactersDefault());\r\n    } else {\r\n      dispatch(charactersRequest());\r\n      axios.get(`https://rickandmortyapi.com/api/character/?name=${character}`)\r\n      .then(res => {\r\n        dispatch(charactersSuccess(res.data.results));\r\n        //Redirecting to characters\r\n        history.push('/Rick-Morty/characters')\r\n      })\r\n      .catch(err => {\r\n        if(err.response) {\r\n          if(err.response.status === 404) {\r\n            dispatch(charactersError(\"No hay personajes con ese nombre\"))\r\n          }\r\n        } else {\r\n          dispatch(charactersError(\"Problema de conexiÃ³n\"))\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchCharacters;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport '../assets/styles/polish.css'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport fetchCharacters from '../store/actions/searchAction';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction getChars(e, dispatcher, chars, history){\r\n  e.preventDefault();\r\n  dispatcher(fetchCharacters(chars, history));\r\n}\r\n\r\nexport default function Home() {\r\n  const data = useSelector(state => state.search);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [char, setChar] = useState(null);\r\n  const [iWidth, setIWidth] = useState(window.innerWidth)\r\n  \r\n  useEffect(() => {\r\n    function reportWindowSize() {\r\n        setIWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener('resize', reportWindowSize);\r\n    //  Cleanup for componentWillUnmount\r\n    return () => window.removeEventListener('resize', reportWindowSize);\r\n  }, /* Honestly I think this is necessary... */ []);\r\n\r\n  return (\r\n    <main>\r\n      { !data.error && !data.loading &&\r\n      <form className=\"d-flex search-bar\">\r\n        <input\r\n          className=\"form-control me-2 round\"\r\n          type=\"search\" onChange={e => setChar(e.target.value)}\r\n          placeholder=\"Rick Sanchez\"\r\n          aria-label=\"Search\" />\r\n        <button \r\n          onClick={e => getChars(e, dispatch, char, history)}\r\n          className=\"btn btn-outline-success search-btn\"\r\n          type=\"submit\">{iWidth > 425 ? 'Buscar personajes' : 'Buscar'}\r\n        </button>\r\n      </form>}\r\n      {data.loading &&\r\n      <div className=\"sprite\">\r\n        <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/97424/sprite-spinner.png\" alt=\"loading\" />\r\n      </div>}\r\n      {!data.loading && data.error &&\r\n      <div className=\"error\">\r\n        <p><b>{data.error}</b></p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-info\"\r\n          onClick={() => {\r\n            dispatch(fetchCharacters(null, history))\r\n          }}>Regresar</button>\r\n      </div>}     \r\n    </main>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n// Sweet alert\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nexport const CHARACTER_REQUEST = \"CHARACTER_REQUEST\";\r\nexport const CHARACTER_SUCCESS = \"CHARACTER_SUCCESS\";\r\nexport const CHARACTER_ERROR = \"CHARACTER_ERROR\";\r\n\r\n// Actions\r\nexport const characterRequest = () => {\r\n  return {\r\n    type: CHARACTER_REQUEST\r\n  }\r\n}\r\nexport const characterSuccess = character => {\r\n  return {\r\n    type: CHARACTER_SUCCESS,\r\n    payload: character\r\n  }\r\n}\r\nexport const characterError = error => {\r\n  return {\r\n    type: CHARACTER_ERROR,\r\n    payload: error\r\n  }\r\n}\r\n\r\nconst fetchUniqueChar = (id, history) => {\r\n  return dispatch => {\r\n    dispatch(characterRequest());\r\n    axios.get(`https://rickandmortyapi.com/api/character/${id}`)\r\n    .then(res => {\r\n      dispatch(characterSuccess(res.data));\r\n      history.push(`/Rick-Morty/${id}`)\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      // Lanzo un mensaje de sweet alert si hay un error (generalmente serÃ¡ de conexiÃ³n).\r\n      const MySwal = withReactContent(Swal)\r\n      MySwal.fire({\r\n        title: 'Â¡Error!',\r\n        text: 'Ha habido un error inesperado',\r\n        icon: 'error',\r\n        confirmButtonText: 'Â¡Esto apesta!',\r\n        confirmButtonColor: 'rgb(80, 173, 177)' \r\n      })\r\n      dispatch(characterError(\"Ha habido un error inesperado\"));\r\n    });\r\n  }\r\n}\r\n\r\nexport default fetchUniqueChar;","import { useDispatch, useSelector } from \"react-redux\"\r\nimport fetchUniqueChar from \"../store/actions/getCharAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Characters() {\r\n  const data = useSelector(state => state.search);\r\n  const character = useSelector(state => state.getChar);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [element, setElement] = useState(null);\r\n  const characters = data.characters.map(char => (\r\n    <div\r\n      onClick={e => {\r\n        setElement(e.target.closest('.char-card').id);\r\n        dispatch(fetchUniqueChar(char.id, history))\r\n      }}\r\n      key={char.id}\r\n      id={char.id}\r\n      className=\"card char-card mb-3 col-sm-12 col-lg-6 col-xl-4\" \r\n      style={{maxWidth: \"540px\"}}\r\n    >\r\n      <div className=\"row g-0\">\r\n        <div className=\"col-md-4\">\r\n          <img src={char.image} className=\"img-fluid rounded-start\" alt={char.name} />\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          {character.loading && (element === document.getElementById(char.id).id) ? 'Loading...' :\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{char.name}</h5>\r\n            <p className=\"card-text\">Species: <small className=\"text-muted\">{char.species}</small></p>\r\n            <p className=\"card-text\">Status: <small className=\"text-muted\">{char.status}</small></p>\r\n            <p className=\"card-text\">Gender: <small className=\"text-muted\">{char.gender}</small></p>\r\n          </div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ))\r\n  return (\r\n    <div className=\"container characters row\">\r\n      {characters}\r\n    </div>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\n\r\nfunction Photo({image, title}) {\r\n  return (\r\n    <div className=\"photo\">\r\n      <img src={image} alt={title} />\r\n      <p><b>{title}</b></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MainData({species, status, type, gender}) {\r\n  return (\r\n    <div className=\"main-data\">\r\n      <p>Species: {species}</p>\r\n      <p>Status: {status}</p>\r\n      <p>Type: {type}</p>\r\n      <p>Gender: {gender}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Character() {\r\n  const data = useSelector(state => state.getChar);\r\n  const char = data.character;\r\n  return (\r\n    <div className=\"canvas row\">\r\n      <div className=\"main\">\r\n        <Photo image={char.image} title={char.name} />\r\n        <MainData\r\n          species={char.species}\r\n          status={char.status}\r\n          type={char.type}\r\n          gender={char.gender}\r\n        />\r\n      </div>\r\n      <div className=\"bonus\">\r\n        <p>Origin: <b>{char.origin.name}</b></p>\r\n        <p>Location: <b>{char.location.name}</b></p>\r\n        <p>Episodes appearances: {char.episode.length}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import Home from './pages/home';\nimport Characters from './pages/characters';\nimport Character from './pages/characterInfo';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/Rick-Morty/\" component={Home} />\n        <Route exact path=\"/Rick-Morty/characters\" component={Characters} />\n        <Route exact path=\"/Rick-Morty/:character\" component={Character} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHARACTERS_ERROR, CHARACTERS_DEFAULT, CHARACTERS_REQUEST, CHARACTERS_SUCCESS } from \"../actions/searchAction\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  characters: [],\r\n  error: null\r\n}\r\n\r\nconst search = (state=initialState, action) => {\r\n  switch(action.type){\r\n    case CHARACTERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case CHARACTERS_DEFAULT:\r\n      return  {\r\n        loading: false,\r\n        characters: [],\r\n        error: null\r\n      }\r\n    case CHARACTERS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        characters: action.payload,\r\n        error: null\r\n      }\r\n    case CHARACTERS_ERROR:\r\n      return {\r\n        loading: false,\r\n        characters: [],\r\n        error: action.payload\r\n      }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default search;","import { CHARACTER_ERROR, CHARACTER_REQUEST, CHARACTER_SUCCESS } from \"../actions/getCharAction\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  character: {},\r\n  error: null\r\n}\r\n\r\nconst character = (state=initialState, action) => {\r\n  switch(action.type){\r\n    case CHARACTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case CHARACTER_ERROR:\r\n      return {\r\n        loading: false,\r\n        character: {},\r\n        error: action.payload\r\n      }\r\n    case CHARACTER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        character: action.payload,\r\n        error: null\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default character;","import { combineReducers } from 'redux';\r\nimport search from './charList';\r\nimport getChar from './charId'\r\n\r\nconst reducers = combineReducers({\r\n  search,\r\n  getChar\r\n});\r\n\r\nexport default reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { applyMiddleware, createStore } from 'redux';\nimport reducers from './store/reducers';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}